{"version":3,"sources":["Header.js","Note.js","NotesList.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","class","className","onClick","addNote","type","placeholder","value","searchText","onChange","e","onSearch","target","Note","console","log","note","title","updatedValue","editMeId","id","onType","description","removeNote","NotesList","noteElements","notes","filter","doesMatchSearch","map","src_Note","key","App","state","Date","now","newNotes","concat","Object","toConsumableArray","_this","setState","updatedKey","updatedNotes","text","newSearchText","toLowerCase","titleMatch","includes","descriptionMatch","hasMatch","noteId","stringifiedNotes","JSON","stringify","this","localStorage","setItem","getItem","savedNotes","parse","src_Header","src_NotesList","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"mMA2BeA,EAzBA,SAACC,GAId,OACEC,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,gBAAZ,IAA4BH,EAAAC,EAAAC,cAAA,iCAC3BF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,OAAKC,MAAM,UACXH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,UAAUC,QAASN,EAAMO,SAA3C,cAGAN,EAAAC,EAAAC,cAAA,SACEE,UAAU,SACVG,KAAK,OACLC,YAAY,yBACZC,MAAOV,EAAMW,WACbC,SAhBW,SAACC,GAClBb,EAAMc,SAASD,EAAEE,OAAOL,cCoCbM,EAvCF,SAAChB,GAgBZ,OACEC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACXY,QAAQC,IAAIlB,GACbC,EAAAC,EAAAC,cAAA,SACEE,UAAU,eACVG,KAAK,OACLC,YAAY,QACZC,MAAOV,EAAMmB,KAAKC,MAClBR,SAvBc,SAACC,GACnB,IAAMQ,EAAeR,EAAEE,OAAOL,MACxBY,EAAWtB,EAAMmB,KAAKI,GAC5BvB,EAAMwB,OAAOF,EAAU,QAASD,MAsB9BpB,EAAAC,EAAAC,cAAA,YACEE,UAAU,oBACVI,YAAY,iBACZC,MAAOV,EAAMmB,KAAKM,YAClBb,SAvBoB,SAACC,GACzB,IAAMQ,EAAeR,EAAEE,OAAOL,MACxBY,EAAWtB,EAAMmB,KAAKI,GAC5BvB,EAAMwB,OAAOF,EAAU,eAAgBD,MAsBrCpB,EAAAC,EAAAC,cAAA,QAAME,UAAU,eAAeC,QAnBf,WAClBN,EAAM0B,WAAW1B,EAAMmB,KAAKI,MAkB1B,OCdSI,EAhBG,SAAC3B,GACjB,IAWM4B,EAVgB5B,EAAM6B,MAAMC,OADR,SAACX,GAAD,OAAUA,EAAKY,kBAWNC,IARhB,SAACb,GAAD,OACjBlB,EAAAC,EAAAC,cAAC8B,EAAD,CACEP,WAAY1B,EAAM0B,WAClBF,OAAQxB,EAAMwB,OACdL,KAAMA,EACNe,IAAKf,EAAKI,OAId,OAAOtB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAcuB,IC+FtBO,6MAzGbC,MAAQ,CACNP,MAAO,CACL,CACEN,GAAIc,KAAKC,MACTlB,MAAO,GACPK,YAAa,GACbM,iBAAiB,IAGrBpB,WAAY,MAGdJ,QAAU,WAER,IAOMgC,EAAQ,CAPE,CACdhB,GAAIc,KAAKC,MACTlB,MAAO,GACPK,YAAa,GACbM,iBAAiB,IAGLS,OAAAC,OAAAC,EAAA,EAAAD,CAAgBE,EAAKP,MAAMP,QACzCc,EAAKC,SAAS,CAAEf,MAAOU,OAGzBf,OAAS,SAACF,EAAUuB,EAAYxB,GAK9B,IAAMyB,EAAeH,EAAKP,MAAMP,MAAMG,IAAI,SAACb,GACzC,OAAIA,EAAKI,KAAOD,EACPH,EAEY,UAAf0B,GACF1B,EAAKC,MAAQC,EACNF,IAEPA,EAAKM,YAAcJ,EACZF,KAIbwB,EAAKC,SAAS,CAAEf,MAAOiB,OAGzBhC,SAAW,SAACiC,GACV,IAAMC,EAAgBD,EAAKE,cACrBH,EAAeH,EAAKP,MAAMP,MAAMG,IAAI,SAACb,GACzC,GAAK6B,EAGE,CACL,IAAM5B,EAAQD,EAAKC,MAAM6B,cACnBxB,EAAcN,EAAKM,YAAYwB,cAC/BC,EAAa9B,EAAM+B,SAASH,GAC5BI,EAAmB3B,EAAY0B,SAASH,GACxCK,EAAWH,GAAcE,EAE/B,OADAjC,EAAKY,gBAAkBsB,EAChBlC,EARP,OADAA,EAAKY,iBAAkB,EAChBZ,IAYXwB,EAAKC,SAAS,CACZf,MAAOiB,EACPnC,WAAYqC,OAIhBtB,WAAa,SAAC4B,GACZ,IAAMR,EAAeH,EAAKP,MAAMP,MAAMC,OAAO,SAACX,GAAD,OAAUA,EAAKI,KAAO+B,IACnEX,EAAKC,SAAS,CAAEf,MAAOiB,yFAIvB,IAAMS,EAAmBC,KAAKC,UAAUC,KAAKtB,MAAMP,OACnD8B,aAAaC,QAAQ,aAAcL,+CAInC,IAAMA,EAAmBI,aAAaE,QAAQ,cAC9C,GAAIN,EAAkB,CACpB,IAAMO,EAAaN,KAAKO,MAAMR,GAC9BG,KAAKd,SAAS,CAAEf,MAAOiC,sCAKzB,OACE7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6D,EAAD,CACElD,SAAU4C,KAAK5C,SACfP,QAASmD,KAAKnD,QACdI,WAAY+C,KAAKtB,MAAMzB,aAEzBV,EAAAC,EAAAC,cAAC8D,EAAD,CACEvC,WAAYgC,KAAKhC,WACjBF,OAAQkC,KAAKlC,OACbK,MAAO6B,KAAKtB,MAAMP,gBAnGVqC,aCAZC,SAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAOtE,EAAAC,EAAAC,cAACqE,EAAD,MAASL","file":"static/js/main.a03c1535.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  const callSearch = (e) => {\r\n    props.onSearch(e.target.value);\r\n  };\r\n  return (\r\n    <header>\r\n     <div class =\"header-title\"> <h1 >Super Sticky Notes</h1></div>\r\n      <aside >\r\n        <div class=\"a_side\">\r\n        <button className=\"add-new\" onClick={props.addNote}>\r\n          + New Note\r\n        </button>\r\n        <input\r\n          className=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Type here to search...\"\r\n          value={props.searchText}\r\n          onChange={callSearch}\r\n        />\r\n        </div>\r\n      </aside>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nconst Note = (props) => {\r\n  const updateTitle = (e) => {\r\n    const updatedValue = e.target.value;\r\n    const editMeId = props.note.id;\r\n    props.onType(editMeId, \"title\", updatedValue);\r\n  };\r\n\r\n  const updateDescription = (e) => {\r\n    const updatedValue = e.target.value;\r\n    const editMeId = props.note.id;\r\n    props.onType(editMeId, \"tdescription\", updatedValue);\r\n  };\r\n\r\n  const clickDelete = () => {\r\n    props.removeNote(props.note.id);\r\n  };\r\n  return (\r\n    <li className=\"note\">\r\n      {console.log(props)}\r\n      <input\r\n        className=\" note__title\"\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={props.note.title}\r\n        onChange={updateTitle}\r\n      />\r\n      <textarea\r\n        className=\"note__description\"\r\n        placeholder=\"Description...\"\r\n        value={props.note.description}\r\n        onChange={updateDescription}\r\n      />\r\n      <span className=\"note__delete\" onClick={clickDelete}>\r\n        X\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport Note from \"./Note\";\r\n\r\nconst NotesList = (props) => {\r\n  const keepSearchMatches = (note) => note.doesMatchSearch;\r\n  const searchMatches = props.notes.filter(keepSearchMatches);\r\n\r\n  const renderNote = (note) => (\r\n    <Note\r\n      removeNote={props.removeNote}\r\n      onType={props.onType}\r\n      note={note}\r\n      key={note.id}\r\n    />\r\n  );\r\n  const noteElements = searchMatches.map(renderNote);\r\n  return <ul className=\"notes-list\">{noteElements}</ul>;\r\n};\r\n\r\nexport default NotesList;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Note from \"./Note\";\r\nimport NotesList from \"./NotesList\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    notes: [\r\n      {\r\n        id: Date.now(),\r\n        title: \"\",\r\n        description: \"\",\r\n        doesMatchSearch: true\r\n      }\r\n    ],\r\n    searchText: \"\"\r\n  };\r\n\r\n  addNote = () => {\r\n    //create a new note\r\n    const newNote = {\r\n      id: Date.now(),\r\n      title: \"\",\r\n      description: \"\",\r\n      doesMatchSearch: true\r\n    };\r\n    //add the new note to existing notes in state\r\n    const newNotes = [newNote, ...this.state.notes];\r\n    this.setState({ notes: newNotes });\r\n  };\r\n\r\n  onType = (editMeId, updatedKey, updatedValue) => {\r\n    //editMeId == id of the note that is edited\r\n    //updateKey == title or description field\r\n    //updateValue == value of title or deascription\r\n\r\n    const updatedNotes = this.state.notes.map((note) => {\r\n      if (note.id !== editMeId) {\r\n        return note;\r\n      } else {\r\n        if (updatedKey === \"title\") {\r\n          note.title = updatedValue;\r\n          return note;\r\n        } else {\r\n          note.description = updatedValue;\r\n          return note;\r\n        }\r\n      }\r\n    });\r\n    this.setState({ notes: updatedNotes });\r\n  };\r\n\r\n  onSearch = (text) => {\r\n    const newSearchText = text.toLowerCase();\r\n    const updatedNotes = this.state.notes.map((note) => {\r\n      if (!newSearchText) {\r\n        note.doesMatchSearch = true;\r\n        return note;\r\n      } else {\r\n        const title = note.title.toLowerCase();\r\n        const description = note.description.toLowerCase();\r\n        const titleMatch = title.includes(newSearchText);\r\n        const descriptionMatch = description.includes(newSearchText);\r\n        const hasMatch = titleMatch || descriptionMatch;\r\n        note.doesMatchSearch = hasMatch;\r\n        return note;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      notes: updatedNotes,\r\n      searchText: newSearchText\r\n    });\r\n  };\r\n\r\n  removeNote = (noteId) => {\r\n    const updatedNotes = this.state.notes.filter((note) => note.id !== noteId);\r\n    this.setState({ notes: updatedNotes });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    const stringifiedNotes = JSON.stringify(this.state.notes);\r\n    localStorage.setItem(\"savedNotes\", stringifiedNotes);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const stringifiedNotes = localStorage.getItem(\"savedNotes\");\r\n    if (stringifiedNotes) {\r\n      const savedNotes = JSON.parse(stringifiedNotes);\r\n      this.setState({ notes: savedNotes });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header\r\n          onSearch={this.onSearch}\r\n          addNote={this.addNote}\r\n          searchText={this.state.searchText}\r\n        />\r\n        <NotesList\r\n          removeNote={this.removeNote}\r\n          onType={this.onType}\r\n          notes={this.state.notes}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport \"./index.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}